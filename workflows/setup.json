{
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Sanitize filename for PDFShift - only alphanumeric, dash, and underscore\nconst originalFilename = $json.filename;\nconst assignmentType = $json.assignmentType;\n\n// Remove file extension and sanitize\nconst baseName = originalFilename.replace(/\\.[^/.]+$/, \"\");\nconst sanitizedBaseName = baseName.replace(/[^a-zA-Z0-9-_]/g, '_');\n\n// Create a clean filename (max 50 chars for PDFShift)\nconst cleanFilename = `${sanitizedBaseName}_${assignmentType.replace(/[^a-zA-Z0-9-_]/g, '_')}`.substring(0, 50);\n\nreturn [{\n  json: {\n    html: $json.html,\n    filename: cleanFilename,\n    originalFilename: originalFilename,\n    assignmentType: assignmentType,\n    userEmail: $json.userEmail\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3712,
        3712
      ],
      "id": "2755f133-cc65-4255-9a9f-b67bf74d8038",
      "name": "Sanitize Filename"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pdfshift.io/v3/convert/pdf",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=source",
              "value": "={{$json[\"html\"]}}"
            },
            {
              "name": "filename",
              "value": "={{$json[\"filename\"]}}.pdf"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3904,
        3712
      ],
      "id": "b18c80f6-605a-47ba-86e6-f62ad3ac052e",
      "name": "PDFShift Converter",
      "credentials": {
        "httpBasicAuth": {
          "id": "20XQfvD5zr9IICxU",
          "name": "Unnamed credential"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "upload",
        "options": {}
      },
      "id": "2080741e-4b84-4077-894e-70fc8ae56341",
      "name": "Assignment Upload Webhook1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        2944,
        3712
      ],
      "webhookId": "upload-test"
    },
    {
      "parameters": {
        "jsCode": "// Prepare data for Gemini API\nconst binaryData = items[0].binary.file.data;\nconst assignmentType = items[0].json.assignmentType;\nconst userEmail = items[0].json.userEmail;\nconst fileName = items[0].json.filename;\nconst mimeType = items[0].json.mimeType;\n\nconst base64Data = binaryData;\n\nreturn [{\n  json: {\n    file: base64Data,\n    filename: fileName,\n    assignmentType: assignmentType,\n    userEmail: userEmail,\n    mimeType: mimeType\n  },\n  binary: {\n    file: items[0].binary.file\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3136,
        3712
      ],
      "id": "a5478670-4274-4993-b4df-8a4299f9ddda",
      "name": "Process File Data2"
    },
    {
      "parameters": {
        "resource": "document",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.0-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.0-flash"
        },
        "text": "Analyze this assignment file and provide comprehensive answers.\n\nYour response MUST be ONLY the raw HTML code.\nThe response must begin directly with \"<!DOCTYPE html>\".\nDo not include any other text, explanations, headers, or markdown formatting like ```html.\nnever wrap the contents in markdown\n\nFormat the response in clean HTML with proper styling. Include:\n1. A title with the assignment type\n2. Well-structured answers with appropriate headings\n3. Clear formatting for readability\n4. Use CSS styling for a professional look",
        "inputType": "binary",
        "binaryPropertyName": "file",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        3312,
        3712
      ],
      "id": "d1cf776f-fb5c-4b22-bfca-684db746cce7",
      "name": "Analyze with Gemini2",
      "credentials": {
        "googlePalmApi": {
          "id": "MVkdTvD2YX3cyJeD",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Extract the actual HTML from Gemini response\nlet htmlContent = '';\n\nif (\n  items[0].json.content &&\n  items[0].json.content.parts &&\n  items[0].json.content.parts.length > 0 &&\n  items[0].json.content.parts[0].text\n) {\n  htmlContent = items[0].json.content.parts[0].text;\n} else if (\n  items[0].json.candidates &&\n  items[0].json.candidates[0].content &&\n  items[0].json.candidates[0].content.parts[0].text\n) {\n  htmlContent = items[0].json.candidates[0].content.parts[0].text;\n} else {\n  htmlContent = JSON.stringify(items[0].json, null, 2);\n}\n\nreturn [\n  {\n    json: {\n      html: htmlContent,\n      filename: items[0].json.filename || 'document',\n      assignmentType: items[0].json.assignmentType || 'Assignment',\n      userEmail: items[0].json.userEmail || ''\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3520,
        3712
      ],
      "id": "5ac09164-a8a1-4eef-9ec2-29618b165c2e",
      "name": "Code2"
    },
    {
      "parameters": {
        "functionCode": "// Process PDF response from PDFShift\nconst pdfData = items[0].binary.pdf.data;\n\n// Pass through all the original data and add PDF binary\nreturn [{\n  json: {\n    filename: $json.originalFilename,\n    assignmentType: $json.assignmentType,\n    userEmail: $json.userEmail\n  },\n  binary: {\n    pdf: {\n      data: pdfData,\n      mimeType: 'application/pdf',\n      fileName: `${$json.filename}.pdf`\n    }\n  }\n}];"
      },
      "id": "7baf7837-aa68-4706-a88a-5590d7901ca3",
      "name": "Process PDF Data2",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        4096,
        3712
      ]
    },
    {
      "parameters": {
        "fromEmail": "losndfoun@gmail.com",
        "toEmail": "={{$json.userEmail}}",
        "subject": "={{ \"Processed Assignment: \" + $json.assignmentType }}",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "aa83b90d-178a-4241-bd72-f03c24b82ea6",
      "name": "Send Email1",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        4288,
        3712
      ],
      "credentials": {
        "smtp": {
          "id": "LTKGvE1DYXfHKSvD",
          "name": "SMTP account"
        }
      }
    }
  ],
  "connections": {
    "Sanitize Filename": {
      "main": [
        [
          {
            "node": "PDFShift Converter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PDFShift Converter": {
      "main": [
        [
          {
            "node": "Process PDF Data2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assignment Upload Webhook1": {
      "main": [
        [
          {
            "node": "Process File Data2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process File Data2": {
      "main": [
        [
          {
            "node": "Analyze with Gemini2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze with Gemini2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Sanitize Filename",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process PDF Data2": {
      "main": [
        [
          {
            "node": "Send Email1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3bb4d6d8b1ec391588937b6c2321c3498f9da517bdc068d5f874d956c90c0a0c"
  }
}